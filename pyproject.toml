[tool.poetry]
name = "ctf_evals_core"
version = "0.1.0"
description = ""
authors = ["Will.Payne <Will.Payne@dsit.gov.uk>"]
readme = "README.md"
packages = [
  {include = "ctf_evals_core", from = "src"},
  {include = "ctf_evals_tests", from = "src"},
]

[tool.poetry.scripts]
ctf_eval = "ctf_evals_core._cli.main:main"

[tool.poetry.dependencies]
python = "^3.11"
pyyaml = "^6.0.1"
boto3 = "^1.34.51"
pytest = "^8.1.1"
ruamel-yaml = "^0.18.6"
inspect-ai = ">=0.3.47"
click = "^8.1.7"
jsonschema = "^4.23.0"
types-jsonschema = "^4.23.0.20241208"

[tool.poetry.group.dev.dependencies]
mypy = "^1.9.0"
pre-commit = "^3.6.2"
pytest = "^8.1.1"
ruff = "^0.6.0"
boto3-stubs = "^1.35.62"
types-pyyaml = "^6.0.12.20240917"
pytest-asyncio = "^0.25.2"

[tool.ruff.lint]
select = ["E",   # pycodestyle errors
          "W",   # pycodestyle warnings
          "F",   # flake8
          "D",   # pydocstyle
          "I",   # isort
          # "RET", # flake8-return
          # "RUF", # ruff rules
        ]
ignore = [
  "E203", # whitespace before punctuations
  "D10",
  "D203", # 1 blank line required before class docstring
  "D212", # Multi-line docstring should have a summary on first line
  "E501", # Line too long. We use ruff format for this already
]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.poetry.plugins.inspect_ai]
ctf_evals_core = "ctf_evals_core._registry"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

# Ignore ctf_evals_tests since that's for people to consume not to test
# this package
[tool.pytest.ini_options]
testpaths = "tests"
