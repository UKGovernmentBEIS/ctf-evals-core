[tool.poetry]
name = "ctf-eval-examples"
version = "0.1.0"
description = "Example CTF evaluations implemented using inspect-ctf"
authors = ["UK AI Safety Institute"]
readme = "README.md"
package-mode = false

[tool.poetry.dependencies]
python = "^3.10"
inspect-ai = "^0.3.47"
inspect_ctf = { path = "..", develop = true }
pytest = "^8.1.1"
aisitools = {git = "https://github.com/AI-Safety-Institute/aisi-inspect-tools"}
openai = "^1.59.7"

[tool.ruff.lint]
select = ["E",   # pycodestyle errors
          "W",   # pycodestyle warnings
          "F",   # flake8
          "D",   # pydocstyle
          "I",   # isort
          # "RET", # flake8-return
          # "RUF", # ruff rules
        ]
ignore = ["E203", "D10", "D203", "D212"]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.mypy]
# The images dir may contain multiple modules with the same name (e.g. server.py).
exclude = [
  "images",
  "resources",
]

[tool.pytest.ini_options]
addopts = "--pyargs ctf_evals_tests"


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
